class Solution {
    ListNode* reverseLL(ListNode* first){
        ListNode* prev=NULL;
        ListNode* curr=first;
        while(curr!=NULL){
            ListNode* forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
    }
    void insertAtTail(ListNode* &head,ListNode* &tail,int data){
           ListNode* temp=new ListNode(data);
        if(head==NULL){
            head=temp;
            tail=temp;
            return;
        }else{
        tail->next=temp;
        tail=temp;
        }
    }
    ListNode* add(ListNode* first,ListNode* second){
        int carry=0;
        ListNode*ansHead=NULL;
        ListNode* ansTail=NULL;
        while(first!=NULL && second!=NULL){
            int sum=carry+first->val+second->val;
            int digit=sum%10;//Jo mene rkhni hai
            insertAtTail(ansHead,ansTail,digit);
            carry=sum/10;
            first=first->next;
            second=second->next;
        }
        while(first!=NULL){
            int sum=carry+first->val;
            int digit=sum%10;
            insertAtTail(ansHead,ansTail,digit);
            carry=sum/10;
            first=first->next;
        }
        while(second!=NULL){
            int sum=carry+second->val;
            int digit=sum%10;
            insertAtTail(ansHead,ansTail,digit);
            carry=sum/10;
             second=second-> next;
        }
        while(carry!=0){
            int sum=carry;
            int digit=sum%10;
            insertAtTail(ansHead,ansTail,digit);
            carry=sum/10;
        }
        return ansHead;
    }
    
public:
    ListNode* addTwoNumbers(ListNode* first, ListNode* second) {
        //first=reverseLL(first);
        //second=reverseLL(second);
        ListNode* ans=add(first,second);
        //ans=reverseLL(ans);
        return ans;
        
    }
};
