vector<int> getTopView(TreeNode<int> *root) {
    vector<int> ans;
    if(root==NULL){
        return ans;
    }
    map<int,int>mp;// map for verrtical and node->data
    queue<pair<TreeNode<int>*,int>> q;// queue for Node* and vertical
    q.push(make_pair(root,0));
    while(!q.empty()){
        auto temp=q.front();
        q.pop();
        TreeNode<int>* frontNode=temp.first;
        int vertical=temp.second;

        //check 1:1 entry in mp;
        if(mp.find(vertical)==mp.end()){//if no entry in mp corresponding to vertical
        mp[vertical]=frontNode->val;//then make a enrty in map
        }
        if(frontNode->left!=NULL){
            q.push(make_pair(frontNode->left,vertical-1));
        }
        if(frontNode->right!=NULL){
            q.push(make_pair(frontNode->right,vertical+1));
        }

    }
    for(auto it:mp){
        ans.push_back(it.second);
    }
    return ans;
}
