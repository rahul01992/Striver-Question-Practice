class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& arr, int k) {
        deque<int>dq;
        vector<int>ans;
        for(int i=0;i<arr.size();i++){
            //check if element in front of dequeue is out of bound
            //if yes the remove it from the dequeue
            if(!dq.empty() && dq.front()==i-k){
                dq.pop_front();
            }

            // remove all the smaller elements's indexed from dequeue
            while(!dq.empty() && arr[dq.back()]<arr[i]){
                dq.pop_back();
            }

            dq.push_back(i);

            //now push max into ans (kth window size minimum)(easy condition)
            if(i>=k-1){
                ans.push_back(arr[dq.front()]);
            }
        }
        return ans;
    }
        
};
