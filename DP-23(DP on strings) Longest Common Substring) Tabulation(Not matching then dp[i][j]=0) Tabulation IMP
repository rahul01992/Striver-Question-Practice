int lcs(string &s1, string &s2){
    //first write longest common subsequence code
   
    int n=s1.size();
    int m=s2.size();
    vector<vector<int>>dp(n+1,vector<int>(m+1,0));
    //return solve(n,m,str1,str2);
    //Tabulation
    //Base case
     for(int i=0;i<=n;i++){
        dp[i][0]=0;
    }

    for(int j=0;j<=m;j++){
        dp[0][j]=0;
    }
   
    //Nested loops
    int ans=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(s1[i-1]==s2[j-1]){
                dp[i][j]=1+dp[i-1][j-1];
            }
            else{
                //If not matching then not concern with old one set dp[i][j]=0;
                dp[i][j]=0;
            }
            ans=max(ans,dp[i][j]);
        }
    }
    return ans;
}
