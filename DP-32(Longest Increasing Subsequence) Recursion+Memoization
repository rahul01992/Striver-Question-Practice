class Solution {
public:
int solve(int index ,int prev_index,int n , vector<int>& nums,vector<vector<int>>&dp){
    //base case
    if(index<0) return 0;

    if(dp[index][prev_index-1]!=-1) return dp[index][prev_index-1];

    //non-pick
    int npick=0+solve(index-1,prev_index,n,nums,dp);

    //pick
    int pick=-1e9;
    if(prev_index==n || nums[index]<nums[prev_index]){
        pick=1+solve(index-1,index,n,nums,dp);
    } 
    return dp[index][prev_index-1]=max(pick,npick);
}
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>>dp(n+1,vector<int>(n,-1));
        return solve(n-1,n,n,nums,dp);
    }
};
