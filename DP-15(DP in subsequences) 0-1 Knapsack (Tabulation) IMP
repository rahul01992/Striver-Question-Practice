int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
    vector<vector<int>>dp(n,vector<int>(maxWeight+1,0));
    //return solve(n-1,maxWeight,weight,value,dp);

    //Tabulation 
    //first handle base case
    //ANALYSIS THE BASE CASE
    for (int wt = weight[0]; wt <= maxWeight; wt++) {
      dp[0][wt] = value[0];
    }

    //Nested Loops
    for(int ind=1;ind<n;ind++){
        for(int wt=0;wt<=maxWeight;wt++){
            int ntake=dp[ind-1][wt];
            int take=-1e9;
            if(weight[ind]<=wt){
                take=value[ind]+dp[ind-1][wt-weight[ind]];
            }
        dp[ind][wt]=max(take,ntake);
        }
    }
    return dp[n-1][maxWeight];
  
}
