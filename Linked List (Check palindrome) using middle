 bool isPalindrome(ListNode* head) {
        //find the middle of linked list
        ListNode* dummy=new ListNode();
        dummy->next=head;
        ListNode *fast=head;
        ListNode* slow=dummy;
        while(fast->next!=NULL && fast!=NULL){
            fast=fast->next;
            slow=slow->next;
            if(fast->next!=NULL){
                fast=fast->next;
            }  
        }
        //reverce the node after the mid
        ListNode* prev=NULL;
        ListNode* curr=slow->next;
        slow->next=NULL;
        while(curr!=NULL){
            ListNode* forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        //compare the two linked list
        ListNode* h1=head;
        ListNode* h2=prev;
        while(h1!=NULL && h2!=NULL){
            if(h1->val!=h2->val){
                return false;
            }
            else{
                h1=h1->next;
                h2=h2->next;
            }
        }
        return true;
    }
