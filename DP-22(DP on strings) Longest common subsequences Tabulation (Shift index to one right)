 int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        //change dp size +1
        vector<vector<int>>dp(n+1,vector<int>(m+1,0));
        //Tabulation
        //handle base cases
        for(int i=0;i<=n;i++){
            dp[i][0]=0;
        }
        for(int j=0;j<=m;j++){
            dp[0][j]=0;
        }

        //Nested loops
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                //match
                if(text1[i-1]==text2[j-1]){
                dp[i][j]= 1+dp[i-1][j-1];
                }
                //not match
            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[n][m];
    }
