 int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        //change dp size +1
        //vector<vector<int>>dp(n+1,vector<int>(m+1,0));
        //Tabulation
        vector<int>prev(m+1,0),curr(m+1,0);
        //handle base cases
        // for(int i=0;i<=n;i++){
        //     dp[i][0]=0;
        // }
        for(int j=0;j<=m;j++){
            prev[j]=0;//No need for col so I removed the col;s part
        }

        //Nested loops
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                //match
                if(text1[i-1]==text2[j-1]){
                curr[j]= 1+prev[j-1];
                }
                //not match
            else curr[j]=max(prev[j],curr[j-1]);
            }
            prev=curr;
        }
        return prev[m];
    }
