class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {

        vector<int>v;
        deque<int>dq;
        int n=nums.size();

        for(int i=0;i<n;i++){

            //check for outbound
            if(!dq.empty() && dq.front()==i-k){
                dq.pop_front();
            }
            
            //check for smaller elements
            while(!dq.empty() && nums[dq.back()]<nums[i]){
                dq.pop_back();
            }

            dq.push_back(i);

            if(i>=k-1){
                v.push_back(nums[dq.front()]);
            }
        }
        return v;
    }
};
