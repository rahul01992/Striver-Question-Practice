#include<vector>
int solve(int days,int last,vector<vector<int>> &nums,vector<vector<int>> &dp){
    //base case
    if(days==0){
        int maxi=0;
        for(int i=0;i<3;i++){
          if (i != last) {
              //simply found the max out of three tasks points of 0 day
            maxi = max(maxi, nums[0][i]);
          }
        }
        return maxi;
    }

    if(dp[days][last]!=-1) return dp[days][last];

    
    int maxPoints=0;
    //Here i represented to tasks
    for(int i=0;i<3;i++){
        if(i!=last){
            //pass the i as a  last because I can't do ith task in next time
            int points=nums[days][i]+solve(days-1,i,nums,dp);
            maxPoints=max(maxPoints,points);
        }
    }
    return dp[days][last]=maxPoints;
}
int ninjaTraining(int n, vector<vector<int>> &points)
{
    int last=3;
    int days=points.size()-1;
    vector<vector<int>> dp(n,vector<int>(4,-1));
     solve(days,last,points,dp);
     return dp[days][last];
}
