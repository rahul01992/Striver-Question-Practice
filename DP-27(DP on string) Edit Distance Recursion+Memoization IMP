int solve(int i,int j,string &s1,string &s2,vector<vector<int>> &dp){
    //base case
    //Let s1 gets empty (i==-1)
    // eg-f(-1,4) we need to 5 insert operation which is j+1
    if(i==0) return j;

     //eg-f(5,-1) we need to perform 6 deletion operation which is i+1
    if(j==0) return i;

    if(dp[i][j]!=-1) return dp[i][j];

    //match(if match character then not need to done any operations)
    if(s1[i-1]==s2[j-1]){
        return dp[i][j]=0+solve(i-1,j-1,s1,s2,dp);
    }
    //Not match

    //insert operation
    int insrt=1+solve(i,j-1,s1,s2,dp);
    int dlt=1+solve(i-1,j,s1,s2,dp);
    int rplc=1+solve(i-1,j-1,s1,s2,dp);
    return dp[i][j]=min(insrt,min(dlt,rplc));
}
int editDistance(string s1, string s2)
{
    int n=s1.size();
    int m=s2.size();
    vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
    return solve(n,m,s1,s2,dp);
}
