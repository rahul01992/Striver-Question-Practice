 
//KEEP IN MIND OF THE BOTTOM POINTER 
 Node* mergeSorted(Node* head1,Node* head2){
    if(head1==NULL){
        return head2;
    }
    if(head2==NULL){
        return head1;
    }
    Node* dummy=new Node(0);
    Node* res=dummy;
    while(head1!=NULL && head2!=NULL){
        if(head1->data<head2->data){
            res->bottom=head1;
            res=res->bottom;
            head1=head1->bottom;
        } 
        else {
            res->bottom = head2;
            res = res->bottom;
            head2 = head2->bottom;
        }   
    }
    if(head1){//head2 wali LL khtm ho gyi
         res->bottom=head1;
    }
    else{
        res->bottom=head2;
    }
    return dummy->bottom;

}
Node *flatten(Node *head)
{
   if(head==NULL || head->next==NULL){//Base case
        return head;
    }
    head->next=flatten(head->next);
    head= mergeSorted(head,head->next);
    return head;
}
