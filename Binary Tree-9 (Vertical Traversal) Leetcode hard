class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        //create queue(node*,pair<vertical,level)
        queue<pair<TreeNode*,pair<int,int>>>q;
        //create data structure(vertical,level,for overlapping nodes(multiset))
        map<int,map<int,multiset<int>>>mp;
        q.push({root,{0,0}});
        while(!q.empty()){
            auto p=q.front();
            q.pop();
            TreeNode* node=p.first;
            int vertical=p.second.first;
            int level=p.second.second;
            mp[vertical][level].insert(node->val);
            if(node->left!=NULL){
                q.push({node->left,{vertical-1,level+1}});
            }
            if(node->right!=NULL){
                q.push({node->right,{vertical+1,level+1}});
            }
        }
        vector<vector<int>>ans;
        for(auto p:mp){
            vector<int>col;
            for(auto q:p.second){
                col.insert(col.end(),q.second.begin(),q.second.end());
            }
            ans.push_back(col);
        }
        return ans;
    }
};
