long countWaysToMakeChange(int *denominations, int n, int value)
{
    //vector<vector<long long>> dp(n,vector<long long>(value+1,0));
    //return solve(n-1,value,denominations,dp);

    //Tabulation
    //base case

    vector<long long> prev(value+1,0),curr(value+1,0);
    for(int tar=0;tar<=value;tar++){
        if(tar%denominations[0]==0){
            prev[tar]=1;
        }
        else{
            prev[tar]=0;
        }
    }
    //Nested loops
    for(int index=1;index<n;index++){
        for(int target=0;target<=value;target++){
            long long npick=prev[target];
            long long pick=0;
            if(target>=denominations[index]){
            pick=curr[target-denominations[index]];
            }
           curr[target]=pick+npick;
        }
        prev=curr;
    }
    return prev[value];
}
