#include <bits/stdc++.h> 
long long solve(vector<int> &num){
    long long prev=num[0];
    long long prev2=0;
    long long n=num.size();
    for(int i=1;i<n;i++){
        long long take=num[i];
        if(i>1) take+=prev2;

        long long nTake=prev;

        long long curri=max(take,nTake);
        prev2=prev;
        prev=curri;
    }
    return prev;
}
long long int houseRobber(vector<int>& valueInHouse)
{
    long long n=valueInHouse.size();
    if(n==1){
        return valueInHouse[0];
    }
    vector<int> temp1,temp2;
    for(int i=0;i<n;i++){
        if(i!=0) temp1.push_back(valueInHouse[i]);
        if(i!=n-1) temp2.push_back(valueInHouse[i]);
    }
    return max(solve(temp1),solve(temp2));
    
}
