void helper(BinaryTreeNode<int>* root,int k,vector<vector<int>> &result,vector<int> row,int &count){
    if(root==NULL){
        return;
    }
    row.push_back(root->data);
    helper(root->left,k,result,row,count);
    helper(root->right,k,result,row,count);
    int size=row.size();
    long long sum=0;
    for(int i=size-1;i>=0;i--){
        sum=sum+row[i];
       // row.push_back(row[i]);
        if(sum==k){
            vector<int>ans;
            for(int j=i;j<size;j++){
                ans.push_back(row[j]);
            }
            result.push_back(ans);
        }
    }
  //  row.pop_back();
}
vector<vector<int>> kPathSum(BinaryTreeNode<int> *root, int k) {
    vector<vector<int>> result;
    vector<int>row;
    int count=0;
    helper(root,k,result,row,count);
    return result;

}
