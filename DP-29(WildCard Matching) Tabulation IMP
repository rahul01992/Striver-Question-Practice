#include<bits/stdc++.h>

bool wildcardMatching(string s1, string s2)
{
   int n=s1.size();
   int m=s2.size();
   //if(n==0 && m==0) return true;
   vector<vector<int>>dp(n+1,vector<int>(m+1,0));
   //return solve(n,m,pattern,text,dp);
   //Tabulation
   //handle base case

   //1st base case
   dp[0][0]=1;

   //2nd base case
   for(int j=1;j<=m;j++){
      dp[0][j]=0;
   }

   //3rd base case
   for(int i=1;i<=n;i++){
      int flag=1;
      for(int var=0;var<i;var++){
         if(s1[var]!='*'){
            flag=0;
            break;
         }
      }
      dp[i][0]=flag;
   }

   //Nested loops

   for(int i=1;i<=n;i++){
      for(int j=1;j<=m;j++){
         if(s1[i-1]==s2[j-1] || s1[i-1]=='?'){
           dp[i][j]=dp[i-1][j-1];
         }
         else if(s1[i-1]=='*'){
         dp[i][j]=dp[i-1][j] | dp[i][j-1];
         }
         else dp[i][j]=0;
      }
   }
   return dp[n][m];
}
